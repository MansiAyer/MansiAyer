# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request: #https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
    branches: [ main ]
  schedule:
    - cron: '0 0 1 * *' #https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Specify minimum required permissions for a workflow or job
    permissions: #https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
      #issues: write
      contents: write
      pull-requests: write
      #actions: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Setup Python
      #  uses: actions/setup-python@v2
        run: |
          sudo su
          apt-get install python3-bs4

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script #moving to update folder and running python file to pick up and generate star list
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${GITHUB_ACTOR}
        run: |
          git clone https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_ACTOR}/${GITHUB_ACTOR}/
          cd ${GITHUB_ACTOR}/update/ 
          python main.py
          cd ..
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "42694815+${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -m "updating readme stars"
          git push
          
      # Push the updated star list to live readme
      #- name: Push updates
      #  uses: MansiAyer/push@v1
      #  with: 
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #- name: Push updates
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    GITHUB_ACTOR: ${GITHUB_ACTOR}
      #  run: |
      #    cd ${GITHUB_ACTOR}/
      #    git config user.name "${GITHUB_ACTOR}"
      #    git config user.email "42694815+${GITHUB_ACTOR}@users.noreply.github.com"
      #    git add .
      #    git commit -m "updating readme stars"
      #    git push --set-upstream "https://${GITHUB_TOKEN}@github.com/${GITHUB_ACTOR}/${GITHUB_ACTOR}/"
        
          
          
          
          
          
          
          
          
          
          
          
